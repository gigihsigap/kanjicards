{"version":3,"sources":["store.tsx","components/Header.tsx","pages/About.tsx","components/Footer.tsx","pages/AddCard.tsx","pages/EditCard.tsx","components/CardList.tsx","pages/HomePage.tsx","components/ProgressBar.tsx","pages/PracticeSession.tsx","pages/PracticeSettings.tsx","pages/DeckList.tsx","pages/ExportDeck.tsx","pages/AddDeck.tsx","pages/PreMadeDecks.tsx","App.tsx","index.tsx"],"names":["Card","cardData","kanji","hiragana","translate","this","sampleCards","store","cards","name","currentSession","deck","slice","correctCounter","playedCounter","totalCount","length","newCard","push","i","splice","allCards","oldArray","array","j","Math","floor","random","shuffle","pop","num","deckData","changeName","newCards","forEach","card","addCard","shuffleAllCards","exportedDeck","JSON","stringify","localStorage","setItem","importedDeck","getItem","parse","replaceDeck","allDecks","undefined","newDecks","JSONdata","oldDecks","concat","removeItem","Header","props","className","to","id","style","maxWidth","textAlign","margin","color","href","Footer","require","useState","setKanji","setHiragana","setTranslate","submitForm","e","a","preventDefault","obj","split","history","onSubmit","type","fontSize","placeholder","value","onChange","target","useEffect","location","join","changeContent","saveToLocalStorage","pathname","CardList","refresh","setRefresh","deleteCard","removeCard","fontWeight","map","onClick","editCard","ProgressBar","bgcolor","completed","fillerStyles","height","width","backgroundColor","borderRadius","transition","left","answer","setAnswer","useCard","setUseCard","mode","numOfCards","Number","outOfCards","state","setState","progress","setProgress","score","setScore","setNumOfCards","firstcard","drawCard","checkAnswer","correctAnswer","translations","includes","console","log","meter","Array","from","document","querySelectorAll","input","loadNextCard","nextCard","display","alignItems","flexFlow","startPractice","marginTop","decks","setDecks","compileAllDecks","kanjidecks","getAllLocalDecks","routePrevent","route","removeFromLocalDecks","selectDeck","removeDeck","dataStr","encodeURIComponent","dlAnchorElem","getElementById","setAttribute","downloadJSON","defaultValue","deckName","setDeckName","justifyContent","files","fr","FileReader","onload","result","formatted","readAsText","item","uploadJSON","App","exact","path","component","HomePage","About","AddCard","EditCard","DeckList","AddDeck","ExportDeck","PreMadeDecks","PracticeSettings","PracticeSession","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eeb62c27.chunk.js","sourcesContent":["function shuffle(oldArray: any) {\r\n  let array = oldArray.slice(0)\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n    [array[i], array[j]] = [array[j], array[i]]; // swap elements\r\n  }\r\n  return array\r\n}\r\n\r\nclass Card {\r\n  kanji: string;\r\n  hiragana: string;\r\n  translate: Array<string>;\r\n  constructor(cardData: CardContent) {\r\n    this.kanji = cardData.kanji || ''\r\n    this.hiragana = cardData.hiragana || ''\r\n    this.translate = cardData.translate || []\r\n  }\r\n\r\n  changeContent(cardData: CardContent) {\r\n    this.kanji = cardData.kanji || ''\r\n    this.hiragana = cardData.hiragana || ''\r\n    this.translate = cardData.translate || []\r\n  }\r\n}\r\n\r\nlet sampleCards = [\r\n  new Card({\r\n    kanji: '学生',\r\n    hiragana: 'がくせい',\r\n    translate: ['student'],\r\n  }),\r\n  new Card({\r\n    kanji: '先生',\r\n    hiragana: 'せんせい',\r\n    translate: ['teacher', 'instructor', 'master', 'sensei', 'elder'],\r\n  }),\r\n  new Card({\r\n    kanji: '割引',\r\n    hiragana: 'わりびき',\r\n    translate: ['discount', 'reduction'],\r\n  })\r\n]\r\n\r\nclass Deck {\r\n  name: string;\r\n  cards: Array<Card>;\r\n  currentSession: any;\r\n  // id: string;\r\n\r\n  constructor(cards: Array<Card>) {\r\n    this.name = \"Sample Cards\"\r\n    this.cards = cards || sampleCards\r\n    this.currentSession = {\r\n      deck: this.cards.slice(0),\r\n      correctCounter: 0,\r\n      playedCounter: 0,\r\n      totalCount: this.cards.length\r\n    }\r\n  }\r\n\r\n  addCard(cardData: CardContent) {\r\n    let newCard = new Card(cardData)\r\n    this.cards.push(newCard)\r\n    return newCard\r\n  }\r\n\r\n  removeCard(i: number) {\r\n    this.cards.splice(i,1)\r\n  }\r\n\r\n  shuffleAllCards() {\r\n    let allCards = this.cards.slice(0)\r\n    this.currentSession.deck = shuffle(allCards)\r\n    this.currentSession.totalCount = allCards.length\r\n  }\r\n\r\n  drawCard() {\r\n    // return a card from the end and remove it from the deck\r\n    return this.currentSession.deck.pop()\r\n  }\r\n\r\n  setNumOfCards(num: number) {\r\n    // for practice session with a set number of cards\r\n    if (num >= this.cards.length || num <= 0) { return }\r\n    for (let i = this.currentSession.deck.length; i > num; i--) {\r\n      this.currentSession.deck.pop()\r\n    }\r\n  }\r\n\r\n  changeName(name: string) {\r\n    this.name = name\r\n  }\r\n\r\n  replaceDeck(deckData: Deck) {\r\n    // Changing name\r\n    this.changeName(deckData.name)\r\n    const newCards = deckData.cards\r\n\r\n    // Emptying cards in the Deck\r\n    this.cards = []\r\n\r\n    // Putting in all the new cards\r\n    newCards.forEach((card) => {\r\n      this.addCard(card)\r\n    })\r\n\r\n    // Shuffling the new deck\r\n    this.shuffleAllCards()\r\n  }\r\n\r\n  saveToLocalStorage() {\r\n    let deck = { name: this.name, cards: this.cards}\r\n    let exportedDeck = JSON.stringify(deck)\r\n    localStorage.setItem(\"kanjicards\", exportedDeck)\r\n  }\r\n\r\n  getFromLocalStorage() {\r\n    const importedDeck = localStorage.getItem(\"kanjicards\")\r\n    if (!importedDeck) { return }\r\n    const deck = JSON.parse(importedDeck)\r\n    this.replaceDeck(deck)\r\n  }\r\n\r\n  getAllLocalDecks() {\r\n    const allDecks = localStorage.getItem(\"kanjidecks\")\r\n    return (allDecks) ? JSON.parse(allDecks) : undefined \r\n  }\r\n\r\n  compileAllDecks() {\r\n    const cards = this.cards\r\n    const deck = { name: this.name, cards: cards }\r\n\r\n    const JSONdata = localStorage.getItem(\"kanjidecks\")\r\n    const oldDecks = JSONdata ? JSON.parse(JSONdata) : undefined\r\n    let newDecks\r\n\r\n    // If there's none stored yet, make a new array\r\n    if (oldDecks) {\r\n      newDecks = oldDecks.concat([deck])\r\n    }\r\n    else {\r\n      newDecks = [this]\r\n    }\r\n    localStorage.setItem(\"kanjidecks\", JSON.stringify(newDecks))\r\n  }\r\n\r\n  removeFromLocalDecks(i: number) {\r\n    const JSONdata = localStorage.getItem(\"kanjidecks\")\r\n    if (!JSONdata) { return }\r\n    let newDecks = JSON.parse(JSONdata)\r\n    newDecks.splice(i, 1)\r\n    localStorage.setItem(\"kanjidecks\", JSON.stringify(newDecks))\r\n  }\r\n\r\n  destroyLocalDecks() {\r\n    localStorage.removeItem(\"kanjidecks\")\r\n  }\r\n}\r\n\r\nconst store = new Deck(sampleCards)\r\n\r\nexport { store }\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header: React.FC<{}> = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <Link to=\"/\">\r\n          <div className=\"logo\">\r\n            Kanji Cards\r\n          </div>\r\n        </Link>\r\n        \r\n        <Link to=\"/practice-settings\">\r\n          <button className=\"btn\" id=\"practice\">\r\n            Practice!\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../components/Header';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <h1>About the Project</h1>\r\n        <div className=\"main-section\" style={{maxWidth: '680px',textAlign:\"justify\", margin: '0 auto'}}>\r\n        Kanjicards is an app for memorizing Kanji words. Somehow they operate differently from individual kanji letters.\r\n        So I made this app to prepare for a Japanese language course and practice my TypeScript. Two birds with one stone.\r\n        <br></br>\r\n        <br></br>\r\n        In case you're here just to use the Practice feature, I prepared some of the cards I used during my studies\r\n        so you don't have to make them from scratch.\r\n        <br></br>\r\n        <br></br>\r\n        This project is heavily inspired from Pseudomon's <u><a style={{color: '#ffffff'}} href=\"https://pseudomon.github.io/lightningcards/#\">Lightning Cards</a></u>. This app is completely front-end,\r\n        so you can save the page and it'll work offline. It automatically saves your decks locally in your browser,\r\n        but you can also use the import/exporter feature to create a backup or to move to a different system/browser.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer: React.FC<{}> = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"footer\">\r\n        <Link to=\"/about\">\r\n          <button>?</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props: any) => {\r\n  const [kanji, setKanji] = useState('')\r\n  const [hiragana, setHiragana] = useState('')\r\n  const [translate, setTranslate] = useState('')\r\n\r\n  const submitForm = async (e: any) => {\r\n    e.preventDefault()\r\n    \r\n    const obj:CardContent = {\r\n      kanji,\r\n      hiragana,\r\n      translate:translate.split(',')\r\n    }\r\n\r\n    // Validate empty card\r\n    if (kanji === '') { return }\r\n    if (hiragana === '') { return }\r\n    if (translate.length === 0) { return }\r\n\r\n    store.addCard(obj)\r\n    props.history.push('/')\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"main-section\">\r\n        <h1>Add New Card</h1>\r\n        <form onSubmit={(e) => submitForm(e)}>\r\n          <div className=\"largecard\">\r\n            <input type=\"text\" style={{fontSize: '3em'}} placeholder=\"kanji\" name=\"kanji\" value={kanji} onChange={(e) => setKanji(e.target.value)}/>\r\n            <input type=\"text\" style={{fontSize: '1.5em'}} placeholder=\"hiragana\" name=\"hiragana\" value={hiragana} onChange={(e) => setHiragana(e.target.value)}/>\r\n            <input type=\"text\" style={{fontSize: '1em'}} placeholder=\"translation\" name=\"translate\" value={translate} onChange={(e) => setTranslate(e.target.value)}/>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn\">Save Card</button>\r\n        </form>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props:any) => {\r\n  const [kanji, setKanji] = useState('')\r\n  const [hiragana, setHiragana] = useState('')\r\n  const [translate, setTranslate] = useState('')\r\n\r\n  useEffect(() => {\r\n    let obj = {\r\n      kanji: '',\r\n      hiragana: '',\r\n      translate: ['']\r\n    }\r\n\r\n    let cardData = props.location.cardData || obj\r\n    setKanji(cardData.kanji)\r\n    setHiragana(cardData.hiragana)\r\n    setTranslate(cardData.translate.join(','))\r\n  }, [])\r\n\r\n  const submitForm = async (e: any) => {\r\n    e.preventDefault()\r\n\r\n    const obj:CardContent = {\r\n      kanji,\r\n      hiragana,\r\n      translate:translate.split(',')\r\n    }\r\n\r\n    // Validate empty card\r\n    if (kanji === '') { return }\r\n    if (hiragana === '') { return }\r\n    if (translate.length === 0) { return }\r\n    \r\n    store.cards[props.location.id].changeContent(obj)\r\n    store.saveToLocalStorage()\r\n    props.history.push({\r\n      pathname:\"/\"\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n        <h1>Edit Card</h1>\r\n        <form onSubmit={(e) => submitForm(e)}>\r\n          <div className=\"largecard\">\r\n            <input type=\"text\" style={{fontSize: '3em'}} placeholder=\"kanji\" name=\"kanji\" value={kanji} onChange={(e) => setKanji(e.target.value)}/>\r\n            <input type=\"text\" style={{fontSize: '1.5em'}} placeholder=\"hiragana\" name=\"hiragana\" value={hiragana} onChange={(e) => setHiragana(e.target.value)}/>\r\n            <input type=\"text\" style={{fontSize: '1em'}} placeholder=\"translation\" name=\"translate\" value={translate} onChange={(e) => setTranslate(e.target.value)}/>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn\">Save Card</button>\r\n        </form>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nconst CardList: React.FC<{}> = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {/* {allCards.map((each) => (\r\n          <div style={{margin: \"1.3em\"}}>\r\n            <CompleteCard content={each}/>\r\n          </div>\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React, { useState, useEffect }  from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport CardList from '../components/CardList';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props: any) => {\r\n  const [refresh, setRefresh] = useState(true)\r\n\r\n  useEffect(() => {}, [refresh])\r\n\r\n  const addCard = () => {\r\n    props.history.push({\r\n      pathname:\"/add-card\"\r\n    })\r\n  }\r\n  \r\n  const editCard = (id: number, card: CardContent) => {\r\n    props.history.push({\r\n      pathname:\"/edit-card\",\r\n      cardData: card,\r\n      id: id\r\n    })\r\n  }\r\n\r\n  const deleteCard = async (id: number) => {\r\n    store.removeCard(id)\r\n    setRefresh(!refresh);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"main-section\" >\r\n        Your current deck is: <span style={{fontSize: '1.2em', fontWeight: 500}}> {store.name}</span>\r\n        <div className=\"button-links\">\r\n          <Link to=\"/practice-settings\" >\r\n            <button className=\"btn\" id=\"practice\">Practice!</button>\r\n          </Link>\r\n          <Link to=\"/deck-list\" >\r\n            <button className=\"btn\">Manage Deck</button>\r\n          </Link>\r\n          <Link to=\"/add-card\" >\r\n            <button className=\"btn\">Add Card</button>\r\n          </Link>\r\n          <Link to=\"/export-deck\" >\r\n            <button className=\"btn\">Export Deck</button>\r\n          </Link>\r\n        </div>\r\n        <CardList/>\r\n        <div className=\"cardlist\">\r\n          {store.cards.map((card:CardContent, id:number) => {\r\n            return (\r\n              <div key={id} className=\"smallcard\" >\r\n                <div onClick={() => editCard(id, card)}>\r\n                  <div className=\"kanji\">{card.kanji}</div>\r\n                  <div className=\"hiragana\">({card.hiragana})</div>\r\n                  <div className=\"translate\">{card.translate.slice(0,2).join(', ')}</div>\r\n                </div>\r\n                <div className=\"xbutton\" onClick={() => deleteCard(id)}>x</div>\r\n              </div>\r\n            )}\r\n          )}\r\n          <div className=\"smallcard\" onClick={() => addCard()}>\r\n            <div className=\"plusbutton\">+</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { CSSProperties } from 'react';\r\n\r\ninterface ProgressBarProps {\r\n  bgcolor: string,\r\n  completed: number\r\n}\r\n\r\nconst ProgressBar: React.FC<ProgressBarProps> = (props: ProgressBarProps) => {\r\n  const { bgcolor, completed } = props;\r\n\r\n  const containerStyles:CSSProperties = {\r\n    height: '20px',\r\n    width: '700px',\r\n    backgroundColor: \"#e0e0de\",\r\n    borderRadius: 50,\r\n    left: '50%',\r\n    margin: '0 1.5em',\r\n  }\r\n\r\n  const fillerStyles:CSSProperties = {\r\n    height: '100%',\r\n    width: `${completed}%`,\r\n    backgroundColor: bgcolor,\r\n    borderRadius: 'inherit',\r\n    textAlign: 'right',\r\n    transition: 'width 1s',\r\n  }\r\n\r\n  return (\r\n      <div style={containerStyles}>\r\n        <div style={fillerStyles}>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;","import React, { useEffect, useState } from 'react';\r\nimport ProgressBar from '../components/ProgressBar'\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props: any) => {\r\n  const [answer, setAnswer] = useState('')\r\n  const [useCard, setUseCard] = useState({\r\n    kanji: '',\r\n    hiragana: '',\r\n    translate: [''],\r\n  })\r\n  const [state, setState] = useState({\r\n    mode: props.location.mode,\r\n    numOfCards: Number(props.location.numOfCards),\r\n    outOfCards: false,\r\n  })\r\n  const [progress, setProgress] = useState(0)\r\n  const [score, setScore] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    store.shuffleAllCards()\r\n    store.setNumOfCards(state.numOfCards)\r\n    const firstcard = store.drawCard()\r\n    setUseCard(firstcard)\r\n  }, [])\r\n\r\n  const promptCorrect = () => {\r\n    setScore(score + 1)\r\n    console.log(\"You're correct!\")\r\n  }\r\n\r\n  const promptWrong = () => {\r\n    console.log(\"You're wrong!\")\r\n  }\r\n\r\n\r\n  const checkAnswer = (e: any) => {\r\n    e.preventDefault()\r\n    if (!answer) return\r\n\r\n    let correctAnswer = ''\r\n    let translations = ['']\r\n\r\n    switch (state.mode) {\r\n      case 'kanji':\r\n        correctAnswer = useCard.kanji\r\n        break\r\n      case 'hiragana':\r\n        correctAnswer = useCard.hiragana\r\n        break\r\n      case 'translation':\r\n        translations = useCard.translate\r\n        break\r\n      default: break\r\n    }\r\n    \r\n    (answer === correctAnswer || translations.includes(answer)) ? promptCorrect() : promptWrong()\r\n    \r\n    \r\n    const meter = (state.numOfCards-store.currentSession.deck.length)*100/state.numOfCards\r\n    setProgress(meter)\r\n\r\n    // Empties input form\r\n    Array.from(document.querySelectorAll(\"input\")).forEach(\r\n      input => (input.value = \"\")\r\n    );\r\n    setAnswer('')\r\n\r\n    loadNextCard()\r\n  }\r\n\r\n  const loadNextCard = () => {\r\n    let nextCard = store.drawCard()\r\n\r\n    if (nextCard !== undefined) {\r\n      setUseCard(nextCard)\r\n    }\r\n\r\n    else {\r\n      setState({...state, outOfCards: true})\r\n    }\r\n  }\r\n\r\n  const cancelPractice = () => {\r\n    props.history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <div className=\"score\">\r\n          <div>Timer:</div>\r\n          <span>--</span>\r\n        </div>\r\n        <ProgressBar bgcolor=\"#6a1b9a\" completed={progress}/>\r\n        <div className=\"cancelpractice\" onClick={cancelPractice}>\r\n          X\r\n        </div>\r\n      </div>\r\n      {(state.outOfCards)\r\n      ? (<div>\r\n          <h1>Practice complete!</h1>\r\n          <h2>Your got {score} out of {state.numOfCards} cards correct!</h2>\r\n        </div>)\r\n      : (<div>\r\n        <div style={{height:'20px'}}></div>\r\n          <div className=\"largecard\">\r\n            <div>\r\n              {(state.mode === \"kanji\") ? <div className=\"translate\">{useCard.translate[0]}</div> : ''}\r\n            \r\n              {(state.mode === \"hiragana\") ? <div className=\"kanji\">{useCard.kanji}</div> : ''}\r\n            \r\n              {(state.mode === \"translation\") ? <><div className=\"kanji\">{useCard.kanji}</div><div className=\"hiragana\">{useCard.hiragana}</div></> : ''}\r\n            </div>\r\n          </div>\r\n          <div style={{margin:'1em 0'}}>What is the correct {state.mode} for this word?</div>\r\n          <form style={{display:'flex', alignItems: 'center', flexFlow:'column'}} onSubmit={(e) => checkAnswer(e)}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"answer\"\r\n              name=\"answer\" \r\n              placeholder=\"Type your answer here!\"\r\n              onChange={(e) => setAnswer(e.target.value)}/> \r\n            <button className=\"btn\" type=\"submit\">Submit</button>\r\n          </form>\r\n        </div>)}\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props: any) => {\r\n  // TODO: Add timed practice feature\r\n  // const [timer, setTimer] = useState('0')\r\n  const [numOfCards, setNumOfCards] = useState(store.cards.length)\r\n\r\n  const startPractice = (mode: string) => {\r\n    // TODO: Show settings error message\r\n    if (numOfCards > store.cards.length || numOfCards <= 0) { return }\r\n    props.history.push({ \r\n      pathname: '/practice-session',\r\n      numOfCards: numOfCards,\r\n      mode: mode\r\n     });\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n        <h1 style={{marginTop: '0.2em'}}>Choose a practice mode:</h1>\r\n        <div style={{display: 'flex', maxWidth: '500px', margin: '0 auto', flexFlow: 'column'}}>\r\n          \r\n          <div className=\"settingoption\" onClick={() => startPractice('translation')}>\r\n            Kanji + Hiragana 🡲 Translation\r\n          </div>\r\n          <div className=\"settingoption\" onClick={() => startPractice('hiragana')}>\r\n            Kanji 🡲 Hiragana\r\n          </div>\r\n          <div className=\"settingoption\" onClick={() => startPractice('kanji')}>\r\n            Translation 🡲 Kanji\r\n          </div>\r\n        </div>\r\n\r\n        <h2>Other Settings:</h2>\r\n\r\n        <div >\r\n          Set number of cards: \r\n          <input style={{maxWidth: '2em', margin: '0 1em'}} type=\"number\" onChange={(e) => setNumOfCards(e.target.value)} value={numOfCards} />\r\n        </div>\r\n              \r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect }  from 'react';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props: any) => {\r\n  const [decks, setDecks] = useState([store])\r\n\r\n  useEffect(() => {\r\n    store.compileAllDecks()\r\n    const kanjidecks = store.getAllLocalDecks()\r\n    setDecks(kanjidecks)\r\n  }, [])\r\n\r\n  const selectDeck = (id:number, deckData: Array<any>) => {\r\n    store.removeFromLocalDecks(id)\r\n    store.saveToLocalStorage()\r\n    store.replaceDeck(deckData)\r\n    props.history.push({\r\n      pathname:\"/\",\r\n    })\r\n  }\r\n\r\n  const removeDeck = (i: number) => {\r\n    // TODO: Trigger modal?\r\n    if (decks.length <= 1) { return } // TODO: Trigger modal cannot remove\r\n    store.removeFromLocalDecks(i)\r\n    let kanjidecks = store.getAllLocalDecks()\r\n    setDecks(kanjidecks)\r\n  }\r\n\r\n  const routePrevent = (route: number) => {\r\n    // This routing is specific to DeckList page\r\n    // to prevent duplicates in local storage data\r\n    // by selecting default deck before switching route\r\n    store.removeFromLocalDecks(decks.length-1)\r\n    store.saveToLocalStorage()\r\n    store.replaceDeck(store)\r\n\r\n    if (route === 1) props.history.push(\"/\")\r\n    if (route === 2) props.history.push(\"/practice-settings\")\r\n    if (route === 3) props.history.push(\"/add-deck\")\r\n    if (route === 4) props.history.push(\"/about\")\r\n    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <a className=\"logo\" onClick={() => routePrevent(1)}>\r\n          Kanji Cards\r\n        </a>\r\n        <button className=\"btn\" id=\"practice\" onClick={() => routePrevent(2)}>\r\n          Practice!\r\n        </button>\r\n      </div>\r\n      \r\n      <button onClick={() => routePrevent(3)} className=\"btn\">\r\n        Create New Deck\r\n      </button>\r\n      <div style={{margin: \"1em\"}}>\r\n        Select a deck to study with:\r\n      </div>\r\n      <div className=\"main-section\" >\r\n        <div className=\"cardlist\">\r\n          {decks.map((deck:any, id:number) => {\r\n            return (\r\n              <div>\r\n                <div key={id} className=\"smallcard\"> \r\n                    <div>{deck.name}</div>\r\n                    <div>Number of cards: {deck.cards.length}</div>\r\n                </div>\r\n                <button className=\"btn\" onClick={() => selectDeck(Number(id), deck)}>Select Deck</button>\r\n                <button className=\"btn\" onClick={() => removeDeck(Number(id))}>Remove Deck</button>\r\n              </div>\r\n            )}\r\n          )}\r\n        </div>\r\n          \r\n        \r\n        \r\n      </div>\r\n      <div className=\"footer\">\r\n        <button onClick={() => routePrevent(4)}>?</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props:any) => {\r\n\r\n  const downloadJSON = () => {\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(store.cards));\r\n    var dlAnchorElem:any = document.getElementById('downloadAnchorElem');\r\n    dlAnchorElem.setAttribute(\"href\",dataStr);\r\n    // TODO: Allow space on file name?\r\n    dlAnchorElem.setAttribute(\"download\", `${store.name}.json`);\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n        <h1>Export Deck</h1>\r\n        <a id=\"downloadAnchorElem\" onClick={() => downloadJSON()}>\r\n          <button className=\"btn\">Click here to download as JSON!</button>\r\n        </a>\r\n        <div>\r\n          <textarea\r\n            defaultValue={JSON.stringify(store.cards,null,2)}\r\n            style={{width:'500px', height:'300px', marginTop: '1em'}}\r\n            />\r\n        </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default (props: any) => {\r\n  const [deckName, setDeckName] = useState('')\r\n\r\n  const submitForm = async (e: any) => {\r\n    e.preventDefault()\r\n    if (!deckName) { return }\r\n\r\n    let obj = {\r\n      name: deckName,\r\n      cards: []\r\n    }\r\n    store.replaceDeck(obj)\r\n    store.saveToLocalStorage()\r\n    props.history.push(\"/\")\r\n  }\r\n\r\n  const uploadJSON = () => {\r\n    const selectFiles:any = document.getElementById('selectFiles')\r\n    const files = selectFiles.files;\r\n    // console.log(files);\r\n    if (files.length <= 0) {\r\n      return false;\r\n    }\r\n\r\n    const fr = new FileReader();\r\n    \r\n    fr.onload = function(e: any) { \r\n      // console.log('onload', e);\r\n      if (!e.target.result) { return }\r\n      const result = JSON.parse(e.target.result);\r\n      const formatted = JSON.stringify(result, null, 2);\r\n      const target:any = document.getElementById('result')\r\n      target.value = formatted;\r\n\r\n      let obj = {\r\n        name: deckName,\r\n        cards: result || []\r\n      }\r\n      store.replaceDeck(obj)\r\n      store.saveToLocalStorage()\r\n      props.history.push(\"/\")\r\n    }\r\n    // console.log('readastext', fr)\r\n    fr.readAsText(files.item(0));\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <Header/>\r\n        <h1>Create New Deck</h1>\r\n        <div>\r\n          <form style={{display:'flex', alignItems: 'center', flexFlow:'column'}} onSubmit={(e) => submitForm(e)}>\r\n            <input placeholder=\"Insert deck name here...\" type=\"text\" onChange={(e) => setDeckName(e.target.value)}/>\r\n            <button type=\"submit\" className=\"btn\">Build New Deck</button>\r\n          </form>\r\n        </div>\r\n\r\n        <div style={{display: 'flex', justifyContent: 'center', flexFlow: 'column', maxWidth: '500px', margin: '0 auto'}}>\r\n          <textarea id=\"result\" style={{width:'250px', height:'250px', margin: '1em auto'}}>\r\n          \r\n          </textarea>\r\n          <input style={{width: '300px', margin: '1em auto'}} type=\"file\" id=\"selectFiles\"/>\r\n          <button style={{width: '300px', margin: '0 auto'}} className=\"btn\" id=\"import\" onClick={() => uploadJSON()}>Click to Import Cards from JSON file</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nconst {store} = require('../store.tsx');\r\n\r\nexport default () => {\r\n  // TODO: Add premade decks section\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n        \r\n      <Footer/>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport {\n  MemoryRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport './App.css';\n\nimport About from './pages/About';\nimport AddCard from './pages/AddCard';\nimport EditCard from './pages/EditCard';\nimport HomePage from './pages/HomePage';\nimport PracticeSession from './pages/PracticeSession';\nimport PracticeSettings from './pages/PracticeSettings';\nimport DeckList from './pages/DeckList';\nimport ExportDeck from './pages/ExportDeck';\nimport AddDeck from './pages/AddDeck';\nimport PreMadeDecks from './pages/PreMadeDecks';\n\nconst App: React.FC = () => {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/add-card\" component={AddCard} />\n          <Route path=\"/edit-card\" component={EditCard} />\n          <Route path=\"/deck-list\" component={DeckList} />\n          <Route path=\"/add-deck\" component={AddDeck} />\n          <Route path=\"/export-deck\" component={ExportDeck} />\n          <Route path=\"/premades\" component={PreMadeDecks} />\n          <Route path=\"/practice-settings\" component={PracticeSettings} />\n          <Route path=\"/practice-session\" component={PracticeSession} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}