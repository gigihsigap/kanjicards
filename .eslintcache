[{"E:\\Projects\\Portfolio\\kanjicards\\src\\index.tsx":"1","E:\\Projects\\Portfolio\\kanjicards\\src\\App.tsx":"2","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\Footer.tsx":"3","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\Counter.tsx":"4","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\CardList.tsx":"5","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\CompleteCard.tsx":"6","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\TodoListItem.tsx":"7","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\TodoList.tsx":"8","E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\HomePage.tsx":"9","E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\About.tsx":"10","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\Header.tsx":"11","E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\AddCard.tsx":"12","E:\\Projects\\Portfolio\\kanjicards\\src\\store.tsx":"13","E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\EditCard.tsx":"14","E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\Training.tsx":"15"},{"size":197,"mtime":1612408274919,"results":"16","hashOfConfig":"17"},{"size":793,"mtime":1613993108977,"results":"18","hashOfConfig":"17"},{"size":165,"mtime":1612422709219,"results":"19","hashOfConfig":"17"},{"size":970,"mtime":1612426125034,"results":"20","hashOfConfig":"17"},{"size":702,"mtime":1613875989319,"results":"21","hashOfConfig":"17"},{"size":327,"mtime":1612426976529,"results":"22","hashOfConfig":"17"},{"size":477,"mtime":1612971232925,"results":"23","hashOfConfig":"17"},{"size":403,"mtime":1612971583170,"results":"24","hashOfConfig":"17"},{"size":3180,"mtime":1613994679907,"results":"25","hashOfConfig":"17"},{"size":259,"mtime":1613834280569,"results":"26","hashOfConfig":"17"},{"size":646,"mtime":1613993134486,"results":"27","hashOfConfig":"17"},{"size":1354,"mtime":1613984323457,"results":"28","hashOfConfig":"17"},{"size":2592,"mtime":1614018344347,"results":"29","hashOfConfig":"17"},{"size":1889,"mtime":1613992921386,"results":"30","hashOfConfig":"17"},{"size":3185,"mtime":1614024339418,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ctfnla",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Projects\\Portfolio\\kanjicards\\src\\index.tsx",[],["67","68"],"E:\\Projects\\Portfolio\\kanjicards\\src\\App.tsx",[],"E:\\Projects\\Portfolio\\kanjicards\\src\\components\\Footer.tsx",[],"E:\\Projects\\Portfolio\\kanjicards\\src\\components\\Counter.tsx",[],["69","70"],"E:\\Projects\\Portfolio\\kanjicards\\src\\components\\CardList.tsx",["71","72"],"import React from 'react';\r\nimport CompleteCard from './CompleteCard';\r\n\r\n// let allCards = [\r\n//   {\r\n//     origin: '1',\r\n//     reading: 'ichi',\r\n//     translate: 'one',\r\n//   },\r\n//   {\r\n//     origin: '2',\r\n//     reading: 'ni',\r\n//     translate: 'two',\r\n//   }\r\n// ]\r\n\r\ninterface CompleteCardProps {\r\n  data: {\r\n    kanji: string,\r\n    hiragana: string,\r\n    translate: string[],\r\n  }\r\n}\r\n\r\nconst CardList: React.FC<{}> = (props) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        {/* {allCards.map((each) => (\r\n          <div style={{margin: \"1.3em\"}}>\r\n            <CompleteCard content={each}/>\r\n          </div>\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\CompleteCard.tsx",["73"],"E:\\Projects\\Portfolio\\kanjicards\\src\\components\\TodoListItem.tsx",[],"E:\\Projects\\Portfolio\\kanjicards\\src\\components\\TodoList.tsx",[],"E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\HomePage.tsx",["74","75","76"],"E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\About.tsx",["77"],"import React from 'react';\r\nimport Header from '../components/Header';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default () => {\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n        <h1>About the Project</h1>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}","E:\\Projects\\Portfolio\\kanjicards\\src\\components\\Header.tsx",[],"E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\AddCard.tsx",["78"],"E:\\Projects\\Portfolio\\kanjicards\\src\\store.tsx",["79"],"\r\nfunction shuffle(oldArray: any) {\r\n  let array = oldArray.slice(0)\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n    [array[i], array[j]] = [array[j], array[i]]; // swap elements\r\n  }\r\n  console.log('New array:', array)\r\n  return array\r\n}\r\n\r\nfunction meme(str: string) {\r\n  console.log('meme')\r\n  return str[0]\r\n}\r\n\r\nclass Card {\r\n  kanji: string;\r\n  hiragana: string;\r\n  translate: Array<string>;\r\n  constructor(cardData: CardContent) {\r\n    this.kanji = cardData.kanji || ''\r\n    this.hiragana = cardData.hiragana || ''\r\n    this.translate = cardData.translate || []\r\n  }\r\n\r\n  changeContent(cardData: CardContent) {\r\n    this.kanji = cardData.kanji || ''\r\n    this.hiragana = cardData.hiragana || ''\r\n    this.translate = cardData.translate || []\r\n    console.log('Change content:', this)\r\n  }\r\n}\r\n\r\nlet sampleCards = [\r\n  new Card({\r\n    kanji: '学生',\r\n    hiragana: 'がくせい',\r\n    translate: ['student'],\r\n  }),\r\n  new Card({\r\n    kanji: '先生',\r\n    hiragana: 'せんせい',\r\n    translate: ['teacher', 'instructor', 'master', 'sensei', 'elder'],\r\n  }),\r\n  new Card({\r\n    kanji: '割引',\r\n    hiragana: 'わりびき',\r\n    translate: ['discount', 'reduction'],\r\n  })\r\n]\r\n\r\nclass Deck {\r\n  name: string;\r\n  cards: Array<Card>;\r\n  currentSession: any;\r\n\r\n  constructor(cards: Array<Card>) {\r\n    this.name = \"Sample Cards\"\r\n    this.cards = cards || sampleCards\r\n    this.currentSession = {\r\n      deck: this.cards.slice(0),\r\n      correctCounter: 0,\r\n      playedCounter: 0,\r\n      setting: 'default',\r\n      totalCount: this.cards.length\r\n    }\r\n  }\r\n\r\n  addCard(cardData: CardContent) {\r\n    console.log('Add card:', cardData)\r\n    let newCard = new Card(cardData)\r\n    this.cards.push(newCard)\r\n    return newCard\r\n  }\r\n\r\n  removeCard(i: number) {\r\n    console.log('Remove card...', i)\r\n    this.cards.splice(i,1)\r\n    console.log('All cards:', this)\r\n  }\r\n\r\n  shuffleAllCards() {\r\n    let allCards = this.cards.slice(0)\r\n    console.log('Shuffle all cards', allCards)\r\n    this.currentSession.deck = shuffle(allCards)\r\n    this.currentSession.totalCount = allCards.length\r\n  }\r\n\r\n  startNewSession(setting='default') {\r\n    this.currentSession.correctCounter = 0\r\n    this.currentSession.playedCounter = 0\r\n    this.currentSession.setting = setting\r\n    this.shuffleAllCards()\r\n  }\r\n\r\n  drawCard() {\r\n    // return a card from the end and remove it from the deck\r\n    return this.currentSession.deck.pop()\r\n  }\r\n}\r\n\r\nconst currentDeck = new Deck(sampleCards)\r\n\r\nexport { currentDeck }\r\n","E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\EditCard.tsx",["80","81"],"E:\\Projects\\Portfolio\\kanjicards\\src\\pages\\Training.tsx",["82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"83","replacedBy":"87"},{"ruleId":"85","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":20},{"ruleId":"89","severity":1,"message":"93","line":17,"column":11,"nodeType":"91","messageId":"92","endLine":17,"endColumn":28},{"ruleId":"89","severity":1,"message":"94","line":3,"column":11,"nodeType":"91","messageId":"92","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":17,"column":1,"nodeType":"97","endLine":103,"endColumn":2},{"ruleId":"89","severity":1,"message":"98","line":19,"column":17,"nodeType":"91","messageId":"92","endLine":19,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":24,"column":6,"nodeType":"101","endLine":24,"endColumn":15,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"96","line":5,"column":1,"nodeType":"97","endLine":14,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":7,"column":1,"nodeType":"97","endLine":40,"endColumn":2},{"ruleId":"89","severity":1,"message":"103","line":12,"column":10,"nodeType":"91","messageId":"92","endLine":12,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":7,"column":1,"nodeType":"97","endLine":55,"endColumn":2},{"ruleId":"99","severity":1,"message":"104","line":23,"column":6,"nodeType":"101","endLine":23,"endColumn":8,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"96","line":7,"column":1,"nodeType":"97","endLine":122,"endColumn":2},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"@typescript-eslint/no-unused-vars","'CompleteCard' is defined but never used.","Identifier","unusedVar","'CompleteCardProps' is defined but never used.","'Props' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setCards' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array.","ArrayExpression",["108"],"'meme' is defined but never used.","React Hook useEffect has a missing dependency: 'props.location.cardData'. Either include it or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [cards, refresh]",{"range":"114","text":"115"},"Update the dependencies array to be: [props.location.cardData]",{"range":"116","text":"117"},[763,772],"[cards, refresh]",[704,706],"[props.location.cardData]"]